version: "3.7"

networks:
  principal:
    driver: bridge

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: pwd
    networks:
      - principal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 5s
      timeout: 5s
      retries: 3

  sso:
    image: quay.io/keycloak/keycloak:22.0
    container_name: sso-keyblock
    command: >
      start-dev --import-realm
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: pwd
      KC_DB: postgres
      KC_DB_URL_HOST: db
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: keycloak
      KC_DB_PASSWORD: pwd
    volumes:
      - ./sso/realm/data/:/opt/keycloak/data/import/
    networks:
      - principal
    ports:
      - 8080:8080
    depends_on:
      db:
        condition: service_healthy

  frontend-spa:
    container_name: frontend-spa
    build: 
      context: frontend/spa
      dockerfile: Dockerfile.dev # For works as production change Dockerfile.dev to just Dockerfile
    environment:
      REACT_APP_KEYCLOAK_HOST: http://host.docker.internal:8080
      REACT_APP_KEYCLOAK_REALM: sample
      REACT_APP_KEYCLOAK_CLIENT_ID: frontend-spa
    volumes:
      - ./frontend/spa/src/:/opt/app/src/
    networks:
      - principal
    ports:
      - 8081:3000 # For works as production change the port bind to 8080 intead of 3000

  frontend-ssr:
    container_name: frontend-ssr
    build:
      context: frontend/ssr
      dockerfile: Dockerfile.dev
    environment:
      KEYCLOAK_HOST: http://host.docker.internal:8080
      KEYCLOAK_REALM: sample
      KEYCLOAK_CLIENT_ID: frontend-ssr
      KEYCLOAK_CLIENT_SECRET: z1iEeyxoqg5ZPA0XDH1hC1gl7o0M6B5r
    volumes:
      - ./frontend/ssr/pages/:/opt/app/pages/
    networks:
      - principal
    ports:
      - 8082:3000
