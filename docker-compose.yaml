version: "3.7"

networks:
  principal:
    driver: bridge

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: pwd
    networks:
      - principal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 5s
      timeout: 5s
      retries: 3

  sso:
    container_name: sso-keyblock
    build:
      context: sso
      dockerfile: Dockerfile
    command: >
      start-dev --import-realm
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: pwd
      KC_DB: postgres
      KC_DB_URL_HOST: db
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: keycloak
      KC_DB_PASSWORD: pwd
      KC_HOSTNAME: host.docker.internal
      KC_HOSTNAME_ADMIN: host.docker.internal
      KC_HEALTH_ENABLED: true
      KC_PROXY_ENABLED: true
      KC_PROXY: "edge"
      KC_HOSTNAME_PATH: "/sso"
      KC_HTTP_RELATIVE_PATH: "/sso"
    volumes:
      - ./sso/realm/data/:/opt/keycloak/data/import/
    networks:
      - principal
    ports:
      - 8080:8080
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "/usr/local/bin/xh",
          "--check-status",
          "http://localhost:8080/sso/health/ready",
        ]
      interval: 5s
      timeout: 2s
      retries: 5

  proxy:
    container_name: proxy-nginx
    build:
      context: proxy
      dockerfile: Dockerfile
    networks:
      - principal
    ports:
      - 80:80
      - 443:443
    depends_on:
      sso:
        condition: service_healthy

  backend-api:
    container_name: backend-api
    build:
      context: backend/api
      dockerfile: Dockerfile
    environment:
      KEYCLOAK_HOST: http://host.docker.internal:8080
      KEYCLOAK_REALM: sample
    networks:
      - principal
    ports:
      - "8083:3000"
    depends_on:
      sso:
        condition: service_healthy

  frontend-spa:
    container_name: frontend-spa
    build:
      context: frontend/spa
      dockerfile: Dockerfile.dev # For works as production change Dockerfile.dev to just Dockerfile
    environment:
      REACT_APP_KEYCLOAK_HOST: http://host.docker.internal:8080
      REACT_APP_KEYCLOAK_REALM: sample
      REACT_APP_KEYCLOAK_CLIENT_ID: frontend-spa
    volumes:
      - ./frontend/spa/src/:/opt/app/src/
    networks:
      - principal
    ports:
      - 8081:3000 # For works as production change the port bind to 8080 intead of 3000
    depends_on:
      sso:
        condition: service_healthy

  frontend-ssr:
    container_name: frontend-ssr
    build:
      context: frontend/ssr
      dockerfile: Dockerfile.dev
    environment:
      KEYCLOAK_HOST: http://host.docker.internal:8080
      KEYCLOAK_REALM: sample
      KEYCLOAK_CLIENT_ID: frontend-ssr
      KEYCLOAK_CLIENT_SECRET: <KEYCLOAK_CLIENT_SECRET>
      BACKEND_API_HOST: http://host.docker.internal:8083
    volumes:
      - ./frontend/ssr/pages/:/opt/app/pages/
    networks:
      - principal
    ports:
      - 8082:3000
    depends_on:
      sso:
        condition: service_healthy
